Mongo DB (non-traditional db)
----------------------------
1. Scalability.
2. Flexibility (Schemaless db).
3. Performance.

we can represent JSON in text format.
-----------------------------
|relation    document db     |
|--------------------------- |
|attribute | key value pair  |
|value     | Structured Data |
|table     | collection      |
-----------------------------
Example for Document DB
------------------------
{
  RollNo:1,
  Name:"ABC",
  Age:20,
  Address:"Malappuram"
}
-----------------------------------------
mongo
Enter your MongoDB username: 24mca23
Enter your MongoDB password:
-----------------------------------------
show dbs     - list out all the db in it
use <dbname> - to swtich db or automactic create if it not exist
db           - show current db


24mca23_db> db.createCollection("anime");
{ ok: 1 }
24mca23_db> show collections
anime
=============================================================
24mca23_db> db.createCollection("students")
{ ok: 1 }
24mca23_db> db.student.insertOne({rollno:1,name:"Anil",age:22})
{
  acknowledged: true,
  insertedId: ObjectId('681b22eb93b8f459ecd861e1')
}
24mca23_db> db.student.find()
[
  {
    _id: ObjectId('681b22eb93b8f459ecd861e1'),
    rollno: 1,
    name: 'Anil',
    age: 22
  }
]
--------------------------------------------------------
 db.student.find({rollno:2})
[
  {
    _id: ObjectId('681b256e1480a448c5d861e4'),
    rollno: 2,
    name: 'Salman'
  }
]
24mca23_db> 
---------------------------------------------------------
db.student.find({rollno:2})
                ----↓----
                 FILTER
24mca23_db> db.student.find({rollno:2,age:22})
                            ---------↓-------
                                    AND
db.student.find({},{rollno:1,name:1,_id:0})
              |-↓-|--------↓-------------|
     selection para      projection
db.student.find({$and:[{rollno:1,age:22}]})
db.student.find({$or:[{rollno:1,age:22}]})

select rollno,name from student;
db.student.find({},{rollno:1,name:1,_id:0})

[ { rollno: 1, name: 'Anil' }, { rollno: 2, name: 'Salman' } ]
---------------------------------------------------------------

Multivalued attribute
--------------------
db.student.insertOne({ rollno:3,name:"Naheel",age:23,phone:["11111111111","5555555555"]}) 
Composite attribute
-------------------
db.student.insertOne({ rollno:4,name:"Appu",age:25,address:{city:"Malappuram",state:"KL"}})
Nested /complex 
------------------
db.student.insertOne({rollno:5,name:"Dilbar",age:23,project:[{projid:101,pname:"project1"},{projid:102,pname:"project2"}]})
Update record
------------------
db.student.updateOne({rollno:1},{$set:{age:100}})
                    -----↓-----   -----↓-----
              selection condn       
====================================================
>>if dont set selection conditon the entire records
====================================================
add new key to exsiting records
-------------------------------
24mca23_db> db.student.updateOne({rollno:1},{$set:{phone:2222223232}})
                                                  ---------↓---------

rename all the attribute name
------------------------------
db.student.updateOne({phone:{$exists:true}},{$rename:{"phone":"phoneNo"}})

drop a key
------------
db.student.updateOne({rollno:1},{$unset:{phoneNo:""}})

delete  a document
------------------
db.student.deleteOne({rollno:1})

sorting
---------
db.student.find().sort({name:1}) ----->ascending
db.student.find().sort({name:-1}) ---->descending

db.student.find().count() -------> get total record
db.student.find().limit(3) ------> displays first n number record

db.student.createIndex({rollno:1},{unique:true})
               ↳ set a unique key on rollno
